name: Publish Artifact

on:
  workflow_call:
    secrets:
      USERNAME:
        required: true
      USERNAME_ACCESS_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

permissions:
  contents: write
  actions: read
  packages: write

jobs:
  build:
    name: Publish Snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: "warning",
                text: "Publish Artifact Pipeline has been started for the component ${{ github.event.repository.name }}. Author: ${{ github.actor }}."
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Set Up Maven Settings
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "${{ secrets.USERNAME }}",
                "password": "${{ secrets.USERNAME_ACCESS_TOKEN }}"
              }
            ]
          repositories: |
            [
              {
                "id": "central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "url": "https://maven.pkg.github.com/CCPL-Solutions/gdmt-lib-commons"
              }
            ]

      - name: Build and Publish
        run: |
            version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            version=${version}-SNAPSHOT
            mvn clean deploy -DskipTests=true -Drevision=$version

      - name: Create Release Branch
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

          branch=release/$version
          echo "Creating branch $branch ..."

          git config user.name "admghub-ccplsolutions"
          git config user.email "admgithub.ccplsolutions@outlook.com"
          git fetch origin

          if git ls-remote --exit-code --heads origin "$branch"; then
            echo "Branch $branch already exists. Deleting it..."
            git push origin --delete "$branch"
          fi

          git checkout develop
          git checkout -b "$branch"
          git push --set-upstream origin "$branch"

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,repo,message,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  approve-release:
    name: Approve Release
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: release-approval
      url: https://github.com/${{ github.repository }}/branches
    steps:
      - name: Waiting for manual approval
        run: echo "Waiting for approval to finalize the release..."

  finalize-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: approve-release
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Release Branch
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          branch=release/$version

          echo "Current branch"
          git branch --show-current

          echo "Checking out branch $branch ..."
          git fetch origin
          git checkout "$branch"
          git pull

      - name: Set Up Maven Settings
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "${{ secrets.USERNAME }}",
                "password": "${{ secrets.USERNAME_ACCESS_TOKEN }}"
              }
            ]
          repositories: |
            [
              {
                "id": "central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "url": "https://maven.pkg.github.com/CCPL-Solutions/gdmt-lib-commons"
              }
            ]

      - name: Build and Publish
        run: |
          echo "Publishing RELEASE version..."
          mvn clean deploy -DskipTests=true

      - name: Merge Release into Master
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          release_branch=release/$version

          echo "Current branch3"
          git branch --show-current

          echo "Merging $release_branch into master..."
          git config user.name "admghub-ccplsolutions"
          git config user.email "admgithub.ccplsolutions@outlook.com"

          git fetch origin
          git checkout master
          git pull origin master

          echo "Current branch4"
          git branch --show-current

          git merge --no-ff origin/$release_branch -m "chore: merge $release_branch into master"
          git push
